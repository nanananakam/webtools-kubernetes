apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-proxy-config
data:
  nginx.conf: |-
    user  nginx;

    worker_processes 1;

    error_log  /dev/stderr warn;
    pid        /var/run/nginx.pid;

    events {
        worker_connections 1024;
    }        

    http {
        include       /etc/nginx/mime.types;

        keepalive_timeout  300;

        upstream webtools-front {
            server webtools-front:3000;
        }
    
        upstream webtools-go-api {
            server webtools-go-api:80;
        }
    
        server {
            listen 80;
    
            server_name nanananakam.com;
    
            return 301 https://www.nanananakam.com$request_uri;
        }

        server {
            listen 80;

            server_name www.nanananakam.com;
    
            location /_nuxt/ {
                if ($http_x_forwarded_proto = http) {
                    return 301 https://$host$request_uri;
                }
    
                proxy_pass         http://webtools-front;
                proxy_redirect     off;
            }
    
            location /api/ {
                if ($http_x_forwarded_proto = http) {
                    return 301 https://$host$request_uri;
                }
    
                add_header Cache-Control "no-cache, no-store, max-age=0, must-revalidate" always;
    
                rewrite /api/(.*) /$1  break;
                proxy_pass        http://webtools-go-api;
                proxy_redirect    default;
            }
    
            location / {
                if ($http_x_forwarded_proto = http) {
                    return 301 https://$host$request_uri;
                }
    
                add_header Cache-Control "no-cache, no-store, max-age=0, must-revalidate" always;
    
                proxy_pass         http://webtools-front;
                proxy_redirect     off;
            }
        }
    
        server {
            listen 80;

            server_name api.nanananakam.com;
    
            location / {
                if ($http_x_forwarded_proto = http) {
                    return 301 https://$host$request_uri;
                }
    
                add_header Cache-Control "no-cache, no-store, max-age=0, must-revalidate" always;
    
                proxy_pass         http://webtools-go-api;
                proxy_redirect     off;
            }
        }
    
        server {
            listen       80;
            server_name _;
    
            location /_chk {
                empty_gif;
                access_log off;
                break;
            }
        }
    }
